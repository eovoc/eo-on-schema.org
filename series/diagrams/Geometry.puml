@startuml

!define Class agent
!define Property usecase

skinparam Property {
BackgroundColor LightBlue
BorderColor Black
  ArrowColor Black
  linetype Ortho
}

skinparam Class {
BackgroundColor LightGreen
BorderColor Black
ArrowColor Black
linetype Ortho
}

Class Dataset
Class Place
Class GeospatialGeometry
Class GeoCoordinates
Class GeoShape

Class "geo:SpatialObject" as geo_SpatialObject #orange
Class "geo:Geometry"  as geo_Geometry #orange
Class "geo:Feature"  as geo_Feature #orange



Dataset -down-> Place : "spatialCoverage"
Place -right-> GeoCoordinates : "geo"
Place -right-> GeoShape : "geo"
GeospatialGeometry --> GeospatialGeometry : "geoContains, geoIntersects,\n geoOverlaps, geoWithin"

geo_Geometry --> (geo:wktLiteral) : "geo:asWKT"
geo_Geometry --> (geo:geoJSONLiteral) : "geo:asGeoJSON"


geo_Geometry -up-|> GeoShape 
geo_Geometry <|-- GeoCoordinates 

geo_Geometry -up-|> geo_SpatialObject 
geo_Feature -up-|> geo_SpatialObject 

geo_Feature ---> geo_Geometry : "geo:hasGeometry" 

GeoShape -up-|> GeospatialGeometry

geo_SpatialObject ... GeospatialGeometry : "owl:equivalentClass"

geo_SpatialObject --> geo_SpatialObject : "geo:sfContains, geo:sfIntersects,\n geo:sf:Overlaps, geo:sfWithin"




@enduml