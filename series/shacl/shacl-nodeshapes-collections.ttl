@prefix dash: <http://datashapes.org/dash#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <http://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix dctype: <http://purl.org/dc/dcmitype/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

#
# Noted: to interpret schema.org encoding as RDF/JSON-LD, the context has to be provided
#        like this: "@context": "https://schema.org/docs/jsonldcontext.json".
#
#        Currently assume "http" namespace for schema.org.
#

# 
#  §4 EO Collections Encoding
#

#
#  §4.1 Metadata Information
#


schema:ListItemShape
    a sh:NodeShape ;
    sh:targetClass schema:ListItem ;   # applies to all schema:ListItem
    sh:closed false ;
    sh:property [
        sh:path schema:encodingFormat ;
        sh:minCount 0 ;
        sh:maxCount 1 ;
        ​sh:or (
	   [
               ​sh:nodeKind sh:IRI 
	   ]
	   [
               ​sh:datatype xsd:string 
	   ]
	)
    ] ;

    # optional schema:inLanguage

    sh:property [
       sh:path schema:dateCreated ; ​
       ​sh:minCount 0 ;
       ​sh:maxCount 1 ;
       # sh:or dash:DateOrDateTime ; # encoding proposed by https://www.datashapes.org/schemashacl.shapes.ttl
       ​sh:or (
 	   [
 	      sh:datatype xsd:dateTime 
	   ]
	   [
             ​ sh:datatype xsd:date 
	   ]
	   [
               ​sh:datatype schema:Date 
	   ]
	   [
              ​sh:datatype schema:DateTime 
	   ]
	)
   ​] ;
   ​sh:property [
       ​sh:path schema:dateModified ;
       ​sh:minCount 1 ;
       ​sh:maxCount 1 ;
       sh:severity sh:Warning ;
       ​sh:or (
	   [
	      sh:datatype xsd:date 
	   ]
	   [
               ​sh:datatype xsd:dateTime 
	   ]
	   [
               ​sh:datatype schema:Date 
	   ]
	   [
               ​sh:datatype schema:DateTime 
	   ]
	)
   ​] ;
   ​sh:property [
       ​sh:path schema:datePublished ;
       ​sh:minCount 0 ;
       ​sh:maxCount 1 ;
       ​sh:or (
	   [
	      sh:datatype xsd:date 
	   ]
	   [
              ​sh:datatype xsd:dateTime 
	   ]
	   [
               ​sh:datatype schema:Date 
	   ]
	   [
               ​sh:datatype schema:DateTime 
	   ]
	) 
   ​] .



#
#  4.2 Data Identification
#

# Limit to Dataset with additionalType = http://purl.org/dc/dcmitype/Collection
# ex:TargetSubjectsOfExampleShape
#	a sh:NodeShape ;
#	sh:targetSubjectsOf ex:knows .


schema:DataIdentificationShape
    a sh:NodeShape ;
    sh:targetClass schema:Dataset ;  # applies to all schema:Dataset
    sh:property [
        sh:path schema:name ;
        sh:datatype xsd:string ;
        sh:name "name" ;
        sh:minCount 1       
    ] ;

  
    sh:property [
        sh:path schema:description ;
        sh:datatype xsd:string ;
        sh:name "description" ;
        sh:minCount 1 
   ] ;
 
    sh:property schema:IdentifierPropertyShape;

    # additionalType is to include the constant <http://purl.org/dc/dcmitype/>
    sh:property [
       sh:path schema:additionalType ;
       sh:nodeKind sh:IRI ;  # ?
       sh:qualifiedValueShape [
 #         sh:hasValue <http://purl.org/dc/dcmitype/>
          sh:hasValue dctype:Collection
       ] ;
       sh:qualifiedMinCount   1 ;
       sh:qualifiedMaxCount   1 ;
    ];

#    sh:property [
#        sh:path schema:additionalType ;
#        sh:minCount 1 ; ​
​#        sh:hasValue dctype:Collection, <https://inspire.ec.europa.eu/metadata-codelist/ResourceType/series> ; 
​#    ];

   ​sh:property [
       ​sh:path schema:alternateName ;
       ​sh:datatype xsd:string ;
       ​sh:minCount 0 ;
   ​] ;

   ​sh:property [
       ​sh:path schema:citation ;
       ​sh:datatype xsd:string ;
       ​sh:minCount 0 ;
       ​# sh:maxCount 1 ;
   ​] ;

   ​# optional schema:inLanguage

   ​sh:property [
       ​sh:path schema:subjectOf ;    
       ​sh:minCount 0 ;
       ​sh:or (
	   [
	      sh:class schema:ListItem 
	   ]
	   [
	      sh:class schema:MediaObject 
	   ]
	)
   ​] ;

   ​sh:property [
       ​sh:path schema:publishingPrinciples ; 
       ​sh:name "publishingPrinciples" ;   
       ​sh:description "An established standard to which the resource conforms." ;
       ​sh:minCount 0 ;
       ​sh:or (
	   [
	      sh:nodeKind sh:IRI 
	   ]
	   [
             ​# Does this also allow specializations of this class ?
	      sh:class schema:CreativeWork 
	   ]
	)
   ​] ;

   ​sh:property [
       ​sh:path schema:version ; 
       ​sh:name "version" ;   
       ​sh:minCount 0 ;
       ​sh:maxCount 1 ;
       ​# schema:Number or schema:Text
       ​sh:or (
	   [
	      sh:datatype xsd:string 
	   ]
	   [
             ​sh:datatype xsd:double 
	   ]
	   [
             ​sh:datatype xsd:integer 
	   ]
	)
   ​] ;

​
   ​sh:property [
       ​sh:path schema:contactPoint ;
       ​sh:node schema:OrganizationShape ;
   ​] .



#
#  4.2.1 Resource Dates
#

schema:ResourceDatesShape
  ​​a sh:NodeShape ;
  ​​sh:targetClass schema:Dataset ;  # applies to all schema:Dataset
  ​​sh:closed false ;

  ​​sh:property [
      ​​sh:path schema:dateCreated ;
      ​​sh:minCount 0 ;
      ​​sh:maxCount 1 ;
      ​​sh:or (
	   [
	      sh:datatype xsd:date 
	   ]
	   [
             ​​sh:datatype xsd:dateTime 
	   ]
	   [
              ​​sh:datatype schema:Date    # needed if context is used.
	   ]
	   [
              ​​sh:datatype schema:DateTime  # needed if context is used.
	   ]
      ​)
  ​​] ;
  ​​sh:property [
      ​​sh:path schema:dateModified ;
      ​​sh:minCount 0 ;
      ​​sh:maxCount 1 ;
      ​​sh:or (
	   [
	      sh:datatype xsd:date 
	   ]
	   [
            ​​sh:datatype xsd:dateTime 
	   ]
	   [
              ​​sh:datatype schema:Date 
	   ]
	   [
              ​​sh:datatype schema:DateTime 
	   ]
	)
  ​​] ;
  ​​sh:property [
      ​​sh:path schema:datePublished ;
      ​​sh:minCount 0 ;
      ​​sh:maxCount 1 ;
      ​​sh:or (
	   [
	      sh:datatype xsd:date 
	   ]
	   [
            ​​  sh:datatype xsd:dateTime 
	   ]
	   [
              ​​sh:datatype schema:Date 
	   ]
	   [
              ​​sh:datatype schema:DateTime 
	   ]
	)
  ​​] ;
  ​​sh:property [
      ​​sh:path schema:temporalCoverage ;
      ​​sh:datatype xsd:string ;
      ​​sh:name "temporalCoverage" ;
      ​​sh:minCount 1 ;
      ​​sh:or (
	   [
	      sh:datatype xsd:string 
	   ]
	   [
              ​​sh:datatype xsd:dateTime 
	   ]
	)
  ​​] .


#
#  4.2.2 PropertyValue
#

schema:PropertyValueShape
  ​​a sh:NodeShape ;
  ​​sh:targetClass schema:PropertyValue ;  # applies to all schema:PropertyValue
  ​​sh:closed false ;
  ​​sh:property [
      ​​sh:path schema:value ;
      ​sh:minLength 1;    ​
      ​​sh:minCount 1 ;
      ​​# sh:maxCount 1 ;                  # Multiple values can be used for "schema:additionalProperty"
      ​sh:or (
	   [
	      sh:datatype xsd:string 
	   ]
	   [
             ​sh:datatype xsd:double 
	   ]
	   [
             ​sh:datatype xsd:integer 
	   ]
	)
  ​​] ;
  ​​sh:property [
      ​​sh:path schema:url ;
      ​​sh:nodeKind sh:IRI ;
      ​​sh:minCount 0 ;
      ​​sh:maxCount 1 
  ​​] ;
  ​​sh:property [
      ​​sh:path schema:propertyID ;
      ​sh:datatype xsd:string ;         # According to schema.org, should be schema:URL.
      ​​sh:minCount 1 ;
      ​​sh:maxCount 1 
  ​​] .


#
#  4.2.3 Contact
#

schema:ContactShape
  ​​a sh:NodeShape ;
  ​​sh:targetClass schema:Dataset ;  # applies to all schema:Dataset
  ​​sh:closed false ;
  ​sh:property [
       ​sh:path schema:author ;
       ​​sh:minCount 0 ;
       ​​sh:or (
	   [
	      sh:class schema:Organization
	   ]
	   [
             ​ sh:class schema:Person
	   ]
	   [
             ​ sh:class schema:Role
	   ]
	)
  ​] ;
  ​sh:property [
       ​sh:path schema:creator ;
       ​​sh:minCount 0 ;
       ​​sh:or (
	   [
	      sh:class schema:Organization
	   ]
	   [
              ​sh:class schema:Person
	   ]
	   [
             ​ sh:class schema:Role
	   ]
	)
  ​] ;
  ​sh:property [
       ​sh:path schema:contributor ;
       ​​sh:minCount 0 ;
       ​​sh:or (
	   [
	      sh:class schema:Organization
	   ]
	   [
              ​sh:class schema:Person
	   ]
	   [
              ​sh:class schema:Role
	   ]
	)
  ​] ;
  ​sh:property [
       ​sh:path schema:provider ;
       ​​sh:minCount 1 ;
       ​# replace by ?  sh:node schema:PersonOrOrganisationShape ;
       ​​sh:or (
	   [
	      sh:class schema:Organization
	   ]
	   [
              ​sh:class schema:Person
	   ]
	)
  ​] ;
  ​sh:property [
       ​sh:path schema:publisher ;
       ​​sh:minCount 0 ;
       ​​sh:or (
	   [
	      sh:class schema:Organization
	   ]
	   [
              sh:class schema:Person
	   ]
	)
  ​] .


#
#  4.2.4 Organization
#

schema:OrganizationShape
   ​a sh:NodeShape ;
   ​sh:targetClass schema:Organization ;  # applies to all schema:Organization

   ​sh:property [
       ​sh:path schema:name ;
       ​sh:datatype xsd:string ;
       ​​sh:minCount 0 
   ​] ;
   ​sh:property [
       ​sh:path schema:address ;
       ​sh:class schema:PostalAddress ;
       ​​sh:minCount 0 
   ​] ;
   ​sh:property [
       ​sh:path schema:telephone ;
       ​sh:datatype xsd:string ;
       ​​sh:minCount 0 
   ​] ;
   ​sh:property [
       ​sh:path schema:faxNumber ;
       ​sh:datatype xsd:string ;
       ​​sh:minCount 0 
   ​] ;
   ​sh:property [
       ​sh:path schema:email ;
       ​sh:datatype xsd:string ;
       ​​sh:minCount 0 
   ​] ;
   ​sh:property [
       ​sh:path schema:url ;
       ​sh:nodeKind sh:IRI ;
       ​​sh:minCount 0 
   ​] .


schema:PostalAddressShape
   ​a sh:NodeShape ;
   ​sh:targetClass schema:PostalAddress ; # applies to all schema:PostalAddress
   ​sh:closed false ;
   ​sh:property [
       ​sh:path schema:addressCountry ;
       ​sh:datatype xsd:string ;
       ​sh:minCount 1 ;
   ​] ;
   ​sh:property [
       ​sh:path schema:addressLocality ;
       ​sh:datatype xsd:string ;
   ​] ;
   ​sh:property [
       ​sh:path schema:streetAddress ;
       ​sh:datatype xsd:string ;
   ​] ;
   ​sh:property [
       ​sh:path schema:postalCode ;
       ​sh:datatype xsd:string ;
 ​
   ​] .

#
#  4.2.5 Person
#

schema:PersonShape
   ​a sh:NodeShape ;
   ​sh:targetClass schema:Person ;  # applies to all schema:Person

   ​sh:property [
       ​sh:path schema:identifier ;
       ​sh:name "identifier" ;
       ​sh:minCount 0 ;
       ​# simplified definition matching §4.2.5
       ​sh:class schema:PropertyValue ;
​#       sh:or (
​#			[
​#				sh:datatype xsd:string ;
​#			]
​#			[
​#				sh:class schema:PropertyValue ;
​#			]
​#                       [
​#				sh:nodeKind sh:IRI ;
​#			]
​#		)
   ​] ;

   ​sh:property [
       ​sh:path schema:name ;
       ​sh:datatype xsd:string ;
       ​​sh:minCount 0 ;
   ​] ;
   ​sh:property [
       ​sh:path schema:familyName ;
       ​sh:datatype xsd:string ;
       ​​sh:minCount 0 ;
   ​] ;
   ​sh:property [
       ​sh:path schema:givenName ;
       ​sh:datatype xsd:string ;
       ​​sh:minCount 0 ;
   ​] ;
   ​sh:property [
       ​sh:path schema:address ;
       ​sh:class schema:PostalAddress ;
       ​​sh:minCount 0 ;
   ​] ;
   ​sh:property [
       ​sh:path schema:telephone ;
       ​sh:datatype xsd:string ;
       ​​sh:minCount 0 ;
   ​] ;
   ​sh:property [
       ​sh:path schema:faxNumber ;
       ​sh:datatype xsd:string ;
       ​​sh:minCount 0 ;
   ​] ;
   ​sh:property [
       ​sh:path schema:email ;
       ​sh:datatype xsd:string ;
       ​​sh:minCount 0 ;
   ​] ;
   ​sh:property [
       ​sh:path schema:url ;
       ​sh:nodeKind sh:IRI ;
       ​​sh:minCount 0 ;
   ​] ;
   ​sh:property [
       ​sh:path schema:sameAs ;
       ​sh:nodeKind sh:IRI ;
       ​​sh:minCount 0 ;
   ​] .


#
#  4.2.6 Role
#

# below pattern does not work yet.
schema:PersonOrOrganizationShape
 ​​a sh:NodeShape ;
 ​sh:or (
	   [
	      sh:class schema:Organization;
	   ]
	   [
             ​sh:class schema:Person;
	   ]
  ​).



schema:RoleShape
  ​​a sh:NodeShape ;
  ​​sh:targetClass schema:Role ;  # applies to all schema:Role
  ​​sh:closed false ;
  ​sh:property [
       ​sh:path schema:roleName ;
       ​sh:datatype xsd:string ;
       ​​sh:minCount 1 ;
  ​] ;
  ​sh:property [
       ​sh:path schema:description ;
       ​sh:datatype xsd:string ;
       ​​sh:minCount 0 ;
  ​] ;


  ​sh:or (
	[
         ​sh:path schema:author ;
         ​​sh:minCount 1 ;
         ​​sh:or (
	     [
	       sh:class schema:Organization;
	     ]
	     [
              ​sh:class schema:Person;
	     ]
	   )
       ​]

	[
	  sh:path schema:creator ;
       ​​  sh:minCount 1 ;
       ​​  sh:or (
	   [
	      sh:class schema:Organization;
	   ]
	   [
             ​sh:class schema:Person;
	   ]
	   )
	]

	[
	  sh:path schema:contributor ;
       ​​  sh:minCount 1 ;
       ​​  sh:or (
	   [
	      sh:class schema:Organization;
	   ]
	   [
             ​sh:class schema:Person;
	   ]
	   )
	]

	[
	  sh:path schema:publisher ;
       ​​  sh:minCount 1 ;
       ​​  sh:or (
	   [
	      sh:class schema:Organization;
	   ]
	   [
             ​sh:class schema:Person;
	   ]
	   )
	]

	[
	  sh:path schema:provider ;
       ​​  sh:minCount 1 ;
       ​​  sh:or (
	   [
	      sh:class schema:Organization;
	   ]
	   [
             ​sh:class schema:Person;
	   ]
	   )
	]
  ​) .

#
#  4.3 Resource Constraints
#

schema:ResourceConstraintsShape
  ​​a sh:NodeShape ;
  ​​sh:targetClass schema:Dataset ;  # applies to all schema:Dataset
  ​​sh:closed false ;
  ​sh:property [
       ​sh:path schema:license ;
       ​​sh:minCount 0 ;
     ​
       ​​sh:or (
	   [
	      sh:nodeKind sh:IRI ; 
	   ]
	   [
             ​sh:class schema:CreativeWork;
	   ]
	)
  ​] ;
  ​sh:property [
       ​sh:path schema:conditionsOfAccess ;
       ​sh:datatype xsd:string ;
       ​​sh:minCount 1 ;
  ​] .


schema:CreativeWorkShape
  ​​a sh:NodeShape ;
  ​​sh:targetClass schema:CreativeWork ;  # applies to all schema:CreativeWork
  ​​sh:closed false ;
  ​​sh:property [
      ​​sh:path schema:description ;
      ​​sh:datatype xsd:string ;
      ​​sh:minCount 0 ;
  ​​] .

#
#  4.4 DescriptiveKeywords
#

schema:DescriptiveKeywordsShape
  ​​a sh:NodeShape ;
  ​​sh:targetClass schema:Dataset ;  # applies to all schema:Dataset
  ​​sh:closed false ;
  ​sh:property [
       ​sh:path schema:keywords ;
       ​​sh:minCount 0 ; 
       ​​sh:or (
	   [
	      ​sh:datatype xsd:string ; 
	   ]
	   [
             ​sh:class schema:DefinedTerm;
	   ]
	)
  ​] .

#
#  4.4.1 DefinedTerm
#

schema:DefinedTermShape
  ​​a sh:NodeShape ;
  ​​sh:targetClass schema:DefinedTerm ;  # applies to all schema:DefinedTerm
  ​​sh:closed false ;
  ​sh:property [
       ​sh:path schema:name ;
       ​​sh:datatype xsd:string ;
       ​​sh:minCount 0 ; 
       ​sh:maxCount 1 ; 
  ​] ;
  ​sh:property [
       ​sh:path schema:sameAs ;
       ​sh:nodeKind sh:IRI ;
       ​​sh:minCount 0 ; 
  ​] ;
  ​sh:property [
       ​sh:path schema:inDefinedTermSet ;
       ​sh:nodeKind sh:IRI ;
       ​​sh:minCount 0 ; 
       ​sh:maxCount 1 ; 
  ​] ;
  ​sh:property [
       ​sh:path schema:additionalType ;
       ​sh:nodeKind sh:IRI ;
       ​​sh:minCount 0 ; 
       ​sh:maxCount 1 ;
  ​] .


#
#  4.5 SpatialInformation
#

schema:SpatialInformationShape
  ​​a sh:NodeShape ;
  ​​sh:targetClass schema:Dataset ;  # applies to all schema:Dataset
  ​​sh:closed false ;
  ​sh:property [
       ​sh:path schema:spatialCoverage ;
       ​sh:class schema:Place;
       ​​sh:minCount 1 ; 
  ​] .

schema:PlaceShape
  ​​a sh:NodeShape ;
  ​​sh:targetClass schema:Place ;   # applies to all schema:Place
  ​​sh:closed false ;
  ​sh:property [
       ​sh:path schema:additionalProperty ;
       ​sh:class schema:PropertyValue;
       ​​sh:minCount 0 ; 
  ​] ;
  ​sh:property [
       ​sh:path schema:geo ;
       ​​sh:minCount 1 ; 
       ​​sh:or (
	   [
	      sh:class schema:GeoCoordinates; 
	   ]
	   [
             ​sh:class schema:GeoShape;
	   ]
	)
  ​] .

#
#  4.5.1 GeoShape
#

schema:GeoShapeShape
  ​​a sh:NodeShape ;
  ​​sh:targetClass schema:GeoShape ;   # applies to all schema:GeoShape
  ​​sh:closed false ;
  ​sh:property [
       ​sh:path schema:box ;
       ​​sh:datatype xsd:string ;
       ​​sh:minCount 0 ; 
  ​] ;
  ​sh:property [
       ​sh:path schema:polygon ;
       ​​sh:datatype xsd:string ;
       ​​sh:minCount 0 ; 
  ​] ;
  ​sh:property [
       ​sh:path schema:line ;
       ​​sh:datatype xsd:string ;
       ​​sh:minCount 0 ; 
  ​] .


#
#  4.5.2 GeoCoordinates
#

schema:GeoCoordinatesShape
  ​​a sh:NodeShape ;
  ​​sh:targetClass schema:GeoCoordinates ;   # applies to all schema:GeoCoordinates
  ​​sh:closed false ;
  ​sh:property [
       ​sh:path schema:latitude ;   
     ​​  sh:minCount 0 ;
       sh:maxCount 1 ;
       sh:maxInclusive 90 ;
       sh:minInclusive -90 ;
       ​​sh:or (
	   [
	      ​sh:datatype xsd:string ; 
	   ]
	   [
             ​sh:datatype xsd:double ;
	   ]
	   [
             ​sh:datatype xsd:integer ;
	   ]
	) 
  ​] ;
  ​sh:property [
       ​sh:path schema:longitude ;
       ​​sh:minCount 0 ; 
       sh:maxCount 1 ;
       sh:maxInclusive 180 ;
       sh:minInclusive -180 ;
       ​​sh:or (
	   [
	      ​sh:datatype xsd:string 
	   ]
	   [
             ​sh:datatype xsd:double 
	   ]
	   [
             ​sh:datatype xsd:integer 
	   ]
	)
  ​] ;
  ​sh:property [
       ​sh:path schema:elevation ;
       ​​sh:minCount 0 ; 
       ​​sh:or (
	   [
	      ​sh:datatype xsd:string 
	   ]
	   [
             ​sh:datatype xsd:double 
	   ]
	   [
             ​sh:datatype xsd:integer 
	   ]
	)
  ​] .


#
#  4.6 Related URL
#

schema:RelatedUrlShape
  ​​a sh:NodeShape ;
  ​​sh:targetClass schema:Dataset ;   # applies to all schema:Dataset
  ​​sh:closed false ;
  ​sh:property [
       ​sh:path schema:url ;       
     ​​  sh:minCount 0 ;
      ​​ sh:or (
	   [
	      sh:nodeKind sh:IRI 
	   ]
	   [
             ​sh:class schema:LinkRole  
	   ]
	)
  ​] ;
  ​sh:property [
       ​sh:path schema:thumbnailUrl ;  
       ​sh:nodeKind sh:IRI ; 
     ​​  sh:minCount 0 
  ​] ;
  ​sh:property [
       ​sh:path schema:potentialAction ; 
       ​# how to indicate that any subclass of Action is allowed also without enumerating them ?
       ​sh:minCount 0 ; 
     ​​  sh:or (
	   [
	      sh:class schema:Action; 
	   ]
	   [
             ​sh:class schema:SearchAction;
	   ]
	   [
             ​sh:class schema:CreateAction;
	   ]
	)
  ​] ;
  ​sh:property [
       ​sh:path schema:distribution ;  
       ​sh:class schema:DataDownload; 
     ​​  sh:minCount 0 ;
  ​] ;
  ​sh:property [
       ​sh:path schema:subjectOf ;  
     ​​  sh:minCount 1 ;
      ​​ sh:or (
	   [
	      sh:class schema:MediaObject; 
	   ]
	   [
            ​sh:class schema:ListItem;  # See DataIdentificationShape
	   ]
	)
  ​] .


schema:LinkRoleShape
  ​​a sh:NodeShape ;
  ​​sh:targetClass schema:LinkRole ;   # applies to all schema:LinkRole
  ​​sh:closed false ;
  ​sh:property [
       ​sh:path schema:url ;   
       ​sh:nodeKind sh:IRI ;     
     ​​  sh:minCount 1 ;
  ​] ;
  ​sh:property [
       ​sh:path schema:name ;   
       ​sh:datatype xsd:string ;     
     ​​  sh:minCount 0 ;
  ​] ;
  ​sh:property [
       ​sh:path schema:linkRelationship ;   
       ​sh:datatype xsd:string ;     
     ​​  sh:minCount 1 ;
  ​] .


#
#  4.6.1 MediaObject
#

# TBD: does not detect errors...

schema:MediaObjectShape
  ​​a sh:NodeShape ;
  ​​sh:targetClass schema:MediaObject ;   # applies to all schema:MediaObject
​#  ​sh:targetClass schema:DataDownload ;  # applies to all schema:DataDownload ?  does not work ?
  ​​sh:closed false ;
  ​sh:property [
       ​sh:path schema:contentUrl ;   
       ​sh:nodeKind sh:IRI ;     
     ​​  sh:minCount 1 ;
  ​] ;

  ​# optional schema:inLanguage
  ​
  ​sh:property [
       ​sh:path schema:name ;   
       ​sh:datatype xsd:string ;     
     ​​  sh:minCount 0 ;
  ​] ;
  ​sh:property [
       ​sh:path schema:description ;   
       ​sh:datatype xsd:string ;     
     ​​  sh:minCount 0 ;
  ​] ;
  ​sh:property [
       ​sh:path schema:contentSize ;   
       ​sh:datatype xsd:string ;     
     ​​  sh:minCount 0 ;
  ​] ;
  ​sh:property [
       ​sh:path schema:encodingFormat ;        
     ​​  sh:minCount 0 ;
       ​​sh:or (
	   [
              ​sh:nodeKind sh:IRI ;
	   ]
	   [
              ​​sh:datatype xsd:string ;
	   ]
	)
  ​] .


#
#  4.6.2 Action
#


schema:ActionShape
  ​​a sh:NodeShape ;
  ​​sh:targetClass schema:Action ;   # applies to all schema:Action including listed subclasses
​​  sh:targetClass schema:SearchAction ;
  ​sh:targetClass schema:CreateAction ;
  ​sh:targetClass schema:UseAction ;

  ​​sh:closed false ;
  ​sh:property [
       ​sh:path schema:identifier ;        
     ​​  sh:minCount 0 ;
       ​sh:maxCount 1 ;
       ​sh:or (
	   [
		sh:datatype xsd:string ;
	   ]
          ​ [
		sh:nodeKind sh:IRI ;
	   ]
       ​)
  ​] ;
  ​sh:property [
       ​sh:path schema:target ;
       ​sh:minCount 0 ;
       ​# sh:maxCount 1 ;
       ​​sh:or (
	   [
              ​sh:class schema:EntryPoint 
	   ]
	   [
              ​​sh:datatype xsd:string 
	   ]
	)
  ​] .

schema:EntryPointShape
  ​​a sh:NodeShape ;
  ​​sh:targetClass schema:EntryPoint ;   # applies to all schema:EntryPoint

  ​​sh:closed false ;
  ​sh:property [
       ​sh:path schema:identifier ;   
       ​sh:datatype xsd:string ;     
     ​​  sh:minCount 1 
       ​# range and multiplicity checked by schema:IdentifierPropertyShape
  ​] ;
  ​sh:property [
       ​sh:path schema:contentType ;   
       ​sh:datatype xsd:string ;     
     ​​  sh:minCount 0 
  ​] ;   
  ​sh:property [
       ​sh:path schema:encodingType ;   
       ​sh:datatype xsd:string ;     
     ​​  sh:minCount 0 
  ​] ;
  ​sh:property [
       ​sh:path schema:httpMethod ;   
       ​sh:datatype xsd:string ;     
     ​​  sh:minCount 0 
  ​] ;
  ​sh:property [
       ​sh:path schema:urlTemplate ;   
       ​sh:datatype xsd:string ;     
     ​​  sh:minCount 0 
  ​] .

#
#  SearchAction
#

schema:SearchActionShape
  ​​a sh:NodeShape ;
  ​​sh:targetClass schema:SearchAction ;   # applies to all schema:SearchAction

  ​​sh:closed false ;
  ​sh:property [
       ​sh:path schema:query-input ;   
       ​sh:class schema:PropertyValueSpecification ;     
     ​​  sh:minCount 0 ;
  ​] .


schema:PropertyValueSpecificationShape
  ​​a sh:NodeShape ;
  ​​sh:targetClass schema:PropertyValueSpecification ;   # applies to all schema:PropertyValueSpecification

  ​​sh:closed false ;
  ​sh:property [
       ​sh:path schema:valueName ;   
       ​sh:datatype xsd:string ;     
     ​​  sh:minCount 1 ;
  ​] ;
  ​sh:property [
       ​sh:path schema:description ;   
       ​sh:datatype xsd:string ;     
     ​​  sh:minCount 0 ;
  ​] ;   
  ​sh:property [
       ​sh:path schema:valueRequired ;   
       ​sh:datatype xsd:boolean ;     
     ​​  sh:minCount 0 ;
  ​] ;
  ​sh:property [
       ​sh:path schema:valuePattern ;   
       ​sh:datatype xsd:string ;     
     ​​  sh:minCount 0 ;
  ​] .


#
#  4.7 AcquisitionInformation
#

schema:AcquisitionInformationShape
  ​​a sh:NodeShape ;
  ​​sh:targetClass schema:Dataset ;   # applies to all schema:Dataset
  ​​sh:closed false ;
​
  ​sh:property [
       ​sh:path schema:measurementTechnique ;       
     ​​  sh:minCount 0 ;
      ​​ sh:or (
	   [
	      sh:nodeKind sh:IRI ; 
	   ]
	   [
             ​sh:datatype xsd:string ;  
	   ]
	)
  ​] ;
  ​sh:property [
       ​sh:path schema:potentialAction ; 
       ​sh:minCount 0 ; 
     ​​  sh:or (
	   [
	      # sh:Node schema:CreateActionShape; 
             ​sh:class schema:CreateAction;
	   ]
	   [
	      sh:class schema:Action;        # possible due to other Shape
	   ]
	   [
             ​sh:class schema:SearchAction;  # possible due to other Shape
	   ]
	)
  ​] .


# next shape does not work ?  is onlychecked if the "potentialAction" at the higher level is renamed into something else... Not understood.

schema:CreateActionShape
  ​​a sh:NodeShape ;
  ​​sh:targetClass schema:CreateAction ;   # applies to all schema:CreateAction
  ​​sh:closed false ;
  ​sh:property [
       ​sh:path schema:instrument ;       
     ​​  sh:minCount 1;  ​ 
	# sh:class schema:DefinedTerm ; 
       ​sh:Node schema:DefinedTermShape ;
  ​] .



#
#  4.8 Additional Information
#

schema:AdditionalInformationShape
  ​​a sh:NodeShape ;
  ​​sh:targetClass schema:Dataset ;   # applies to all schema:Dataset
  ​​sh:closed false ;
​
  ​sh:property [
       ​sh:path schema:additionalProperty ;       
     ​​  sh:minCount 0 ;
       ​sh:class schema:PropertyValue;
  ​] .



#
#  Auxiliary classes
#



schema:LanguageShape
  ​​a sh:NodeShape ;
  ​​sh:targetClass schema:Language ;  # applies to all schema:Language
  ​​sh:closed false ;
  ​​sh:property [
      ​​sh:path schema:name ;
      ​sh:minLength 2;
      ​sh:maxLength 2;
      ​​sh:datatype xsd:string ;
      ​​sh:minCount 1 ;
      ​​sh:maxCount 1 ;
  ​​] .



schema:InLanguageShape
  ​​a sh:NodeShape ;
  ​​sh:targetSubjectsOf schema:inLanguage ;  # applies to all classes with this attribute
  ​​sh:closed false ;
  ​​sh:property [
      ​​sh:path schema:inLanguage ;
      ​​sh:minCount 1 ; # redundant as the same as the relation mentioned in sh:targetSubjectsOf
      ​​sh:maxCount 1 ;
      ​​sh:or (
	   [
              ​sh:nodeKind sh:IRI ;
              ​sh:class schema:Language
	   ]
	   [
              ​​sh:datatype xsd:string 
	   ]
	)
  ​​] .


#
# Reusable (mandatory) property definitions
#

schema:IdentifierPropertyShape
  ​​a sh:PropertyShape ;

  ​sh:path schema:identifier ;
  ​sh:minCount 1 ;
  ​sh:or (
	[
		sh:datatype xsd:string 
	]
	[
		sh:class schema:PropertyValue 
	]
       ​ [
		sh:nodeKind sh:IRI 
	]
  ​).








   ​
